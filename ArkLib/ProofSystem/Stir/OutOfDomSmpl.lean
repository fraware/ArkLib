/-
Copyright (c) 2025 ArkLib Contributors. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Least Authority
-/

import ArkLib.ProofSystem.Stir.ToCodingTheory.ReedSolomonCodes

import Mathlib.Probability.ProbabilityMassFunction.Basic
import Mathlib.Probability.Distributions.Uniform
import Mathlib.Data.Fintype.Basic


namespace OutOfDomSmpl

/-! Section 4.3 in https://eprint.iacr.org/2024/390.pdf -/


/-- Pr_{r‚ÇÄ, ‚Ä¶, r‚Çõ‚Çã ‚ÇÅ  ‚Üê ùîΩ\L} [‚àÉ distinct u, u‚Ä≤ ‚àà List(f, d, Œ¥) : ‚àÄ i ‚àà [0...s-1], u(r_i) = u‚Ä≤(r_i)] -/
noncomputable def listDecodingCollisionProbability
  {F : Type*} [Field F] [Fintype F] [DecidableEq F]
  {L : Finset F}
  {d : ‚Ñï}
  (C : ReedSolomonCode F L d)
  (Œ¥ : ‚Ñù)
  (s : ‚Ñï)
  (h_nonempty : Nonempty C.domainComplement) : ENNReal :=
  (PMF.uniformOfFintype (Fin s ‚Üí C.domainComplement)).toOuterMeasure { r |
    ‚àÉ (u u' : ‚Ü•C.code),
      u.val ‚â† u'.val ‚àß
      -- both u and u' lie within Œ¥ of some target f
      u.val ‚àà C.list u.val Œ¥ ‚àß
      u'.val ‚àà C.list u.val Œ¥ ‚àß
      -- their interpolating polynomials agree on each sampled r_i
      ‚àÄ i : Fin s,
        (C.poly u).eval (r i).val = (C.poly u').eval (r i).val
  }

lemma out_of_dom_smpl_1
  {F : Type*} [Field F] [Fintype F] [DecidableEq F]
  {L : Finset F}
  {d : ‚Ñï}
  (C : ReedSolomonCode F L d)
  (Œ¥ : ‚Ñù)
  (l s : ‚Ñï)
  (h_decodable : C.listDecodable Œ¥ l) :
  listDecodingCollisionProbability C Œ¥ s C.domain_complement_nonempty ‚â§
    (l.choose 2) * ((d - 1) / (Fintype.card F - L.card))^s := by sorry

lemma out_of_dom_smpl_2
  {F : Type*} [Field F] [Fintype F] [DecidableEq F]
  {L : Finset F}
  {d : ‚Ñï}
  (C : ReedSolomonCode F L d)
  (Œ¥ : ‚Ñù)
  (l s : ‚Ñï)
  (h_decodable : C.listDecodable Œ¥ l) :
  listDecodingCollisionProbability C Œ¥ s C.domain_complement_nonempty ‚â§
    (l^2 / 2) * (d / (Fintype.card F - L.card))^s := by sorry

end OutOfDomSmpl
